import json

APP_NAME="reactorx_cloud"
test_app_version="hello-regression-master"

DASHBOARD_URL = "http://dinobot.xyz.mno.com/summary/{}/{}".format(str(APP_NAME), str(test_app_version))

def create_csv_file_from_test_mapping(mapping_array, test_app_version):
    print((json.dumps(mapping_array)))
    with open("tests_mapping.csv", 'a') as f:
        f.write("SL_NO,TEST_FILE,EXPECTED_TESTS,ACTUAL_TESTS,DURATION\n")
        strng = ",TEST_APP_VERSION,{},,\n".format(test_app_version)
        f.write(strng)
        count = 1
        fail_count = 0
        total_actual_count = 0
        total_expected_count = 0
        complete_test_path = ""
        for item in mapping_array:
            full_path = item['full_path']
            total_expected_count = int(item["expected_tests"]) + total_expected_count
            total_actual_count = int(item["actual_tests"]) + total_actual_count
            if total_actual_count != total_expected_count:
                complete_test_path += full_path + ","
                fail_count += 1
            f.write(
                str(count) + "," + item["test_file"] + "," + item["expected_tests"] + "," + item["actual_tests"] + "," +
                item["duration"] + "\n")
            count = count + 1
        complete_test_path = complete_test_path[:-1]
        print("##################################")
        print("Failed Tests Path for Re Execution")
        print(complete_test_path)
        print("##################################")
        dashboard_link = "<a href=\"" + DASHBOARD_URL + "\">dashboard_link</a>"
        strng=",TEST DASHBOARD URL,,," + dashboard_link + "\n"
        f.write(strng)
        strng=",RE EXECUTE TESTS COUNT,,," + str(fail_count) + "\n"
        f.write(strng)

mapping_array=[{"test_file": "test_can_addressing_run_re_snapper_with_hla_primary_for_address_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_run_re_snapper_with_hla_primary_for_address_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_addressing_snapper__hla_multiple_repo_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_snapper__hla_multiple_repo_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_autofix_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_autofix_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_in-place_repo_clean_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_in-place_repo_clean_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_layer_alignment__build_region_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_layer_alignment__build_region_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_step_13_late_breaking_cleanup_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_step_13_late_breaking_cleanup_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water__smoothening_fix_revert_todos_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water__smoothening_fix_revert_todos_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water__source_finishing_step_2_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water__source_finishing_step_2_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water_clean_up_add_missing_features_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water_clean_up_add_missing_features_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water_suppress_island_names_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water_suppress_island_names_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_esp_addressing_schema_id_updater_rx_cloud.py", "full_path": "rx_cloud_tests/ESP/test_esp_addressing_schema_id_updater_rx_cloud.py", "expected_tests": "3", "actual_tests": "3", "duration": "0:34:51"}, {"test_file": "test_esp_territory_wikipedia_conflation_rx_cloud.py", "full_path": "rx_cloud_tests/ESP/test_esp_territory_wikipedia_conflation_rx_cloud.py", "expected_tests": "8", "actual_tests": "8", "duration": "0:22:10"}, {"test_file": "test_gbr_addressing_postal_snapping_address_finalization_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_addressing_postal_snapping_address_finalization_rx_cloud.py", "expected_tests": "3", "actual_tests": "3", "duration": "1:11:43"}, {"test_file": "test_gbr_addressing_re-snapper__hla_single_repo_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_addressing_re-snapper__hla_single_repo_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_clean_dr_waterbody_merge_and_rep_point_recalculation_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_clean_dr_waterbody_merge_and_rep_point_recalculation_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_clq_barrier_anomaly_todos_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_clq_barrier_anomaly_todos_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_clq_prioritize_ndm_route_vehicular_todos_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_clq_prioritize_ndm_route_vehicular_todos_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_country__subdivision_code_autofix_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_country__subdivision_code_autofix_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_display_class_driven_sampling_todos_on_roadsegments_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_display_class_driven_sampling_todos_on_roadsegments_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_display_class_driven_todos_on_roadsegments_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_display_class_driven_todos_on_roadsegments_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_prioritize_interval_change_driving_todosrx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_prioritize_interval_change_driving_todosrx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_prioritize_ndm_route_vehicular_todos_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_prioritize_ndm_route_vehicular_todos_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_territory_edits_generic_v2_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_territory_edits_generic_v2_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_water_clean_up_add_missing_features_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_water_clean_up_add_missing_features_rx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_ita_addressing_tiger_name_conflation_real_data_rx_cloud.py", "full_path": "rx_cloud_tests/ITA/test_ita_addressing_tiger_name_conflation_real_data_rx_cloud.py", "expected_tests": "12", "actual_tests": "12", "duration": "2:04:11"}, {"test_file": "test_ita_dc_reorg_row_geofixrx_cloud.py", "full_path": "rx_cloud_tests/ITA/test_ita_dc_reorg_row_geofixrx_cloud.py", "expected_tests": "0", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_addressing_access_point_v2_snapping_and_assimilator_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_access_point_v2_snapping_and_assimilator_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_addressing_address_range_conflation_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_address_range_conflation_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_addressing_address_range_interpolator_for_uk_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_address_range_interpolator_for_uk_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_addressing_clusterer_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_clusterer_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_addressing_copy_roads_to_dc_repo_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_copy_roads_to_dc_repo_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_addressing_validate_address_point_house_number_and_update_address_primary_road_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_addressing_validate_address_point_house_number_and_update_address_primary_road_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_adhoc_create_tickets_from_hdfs_todos_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_adhoc_create_tickets_from_hdfs_todos_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_clean_dr_waterbody_merge_and_rep_point_recalculation_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_clean_dr_waterbody_merge_and_rep_point_recalculation_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_meta_acceptance_random_todo_sampler_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_meta_acceptance_random_todo_sampler_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_pedxing_restrict_crossing_on_high_speed_segments_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_pedxing_restrict_crossing_on_high_speed_segments_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_terminal_use_for_regular_roads_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_terminal_use_for_regular_roads_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_terminal_use_on_terminal_fow_rungs_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_terminal_use_on_terminal_fow_rungs_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_traffic_control_ingest_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_traffic_control_ingest_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water_batch1_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water_batch1_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water_name_and_language_cleanup_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water_name_and_language_cleanup_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water_source_finishing_merge_batch_3_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water_source_finishing_merge_batch_3_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water_source_finishing_step_3_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water_source_finishing_step_3_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_can_water_source_prep_post_process_rx_cloud.py", "full_path": "rx_cloud_tests/CAN/test_can_water_source_prep_post_process_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_rx_cloud_deu_addressing_source_prep_real_data.py", "full_path": "rx_cloud_tests/DEU/test_rx_cloud_deu_addressing_source_prep_real_data.py", "expected_tests": "8", "actual_tests": "0", "duration": "0"}, {"test_file": "test_esp_create_todos_from_athena_query_rx_cloud.py", "full_path": "rx_cloud_tests/ESP/test_esp_create_todos_from_athena_query_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_esp_deployment_region_repo_clean_up_rx_cloud.py", "full_path": "rx_cloud_tests/ESP/test_esp_deployment_region_repo_clean_up_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_esp_naming_identify_road_name_self_intersection_rx_cloud.py", "full_path": "rx_cloud_tests/ESP/test_esp_naming_identify_road_name_self_intersection_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_esp_territory_edits_generic_rx_cloud.py", "full_path": "rx_cloud_tests/ESP/test_esp_territory_edits_generic_rx_cloud.py", "expected_tests": "8", "actual_tests": "0", "duration": "0"}, {"test_file": "test_esp_territory_edits_rx_cloud.py", "full_path": "rx_cloud_tests/ESP/test_esp_territory_edits_rx_cloud.py", "expected_tests": "8", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_addressing_address_area_reextracting_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_addressing_address_area_reextracting_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_addressing_schema_id_updater_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_addressing_schema_id_updater_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_addressing_snapper__hla_multiple_repo_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_addressing_snapper__hla_multiple_repo_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_addressing_tiger_name_conflation_real_data_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_addressing_tiger_name_conflation_real_data_rx_cloud.py", "expected_tests": "12", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_addressing_validate_address_point_house_number_and_update_address_primary_road_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_addressing_validate_address_point_house_number_and_update_address_primary_road_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_autofix_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_autofix_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_clq_create_todos_for_aoi_category_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_clq_create_todos_for_aoi_category_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_clq_prioritize_interval_change_driving_todosrx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_clq_prioritize_interval_change_driving_todosrx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_clq_walkability_nulls_in_urban_polygons_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_clq_walkability_nulls_in_urban_polygons_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_meta_acceptance_random_todo_sampler_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_meta_acceptance_random_todo_sampler_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_naming_identify_road_name_self_intersection_real_data_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_naming_identify_road_name_self_intersection_real_data_rx_cloud.py", "expected_tests": "8", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_nightly_pro-active_alignment_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_nightly_pro-active_alignment_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_spinner_autofix_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_spinner_autofix_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_territory_assets_conflation_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_territory_assets_conflation_rx_cloud.py", "expected_tests": "8", "actual_tests": "0", "duration": "0"}, {"test_file": "test_gbr_territory_edits_generic_rx_cloud.py", "full_path": "rx_cloud_tests/GBR/test_gbr_territory_edits_generic_rx_cloud.py", "expected_tests": "8", "actual_tests": "0", "duration": "0"}, {"test_file": "test_irl_addressing_clusterer_rx_cloud.py", "full_path": "rx_cloud_tests/IRL/test_irl_addressing_clusterer_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_irl_addressing_interpolator_and_verifier_with_poi_for_uk_rx_cloud.py", "full_path": "rx_cloud_tests/IRL/test_irl_addressing_interpolator_and_verifier_with_poi_for_uk_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_irl_addressing_snapper__hla_multiple_repo_rx_cloud.py", "full_path": "rx_cloud_tests/IRL/test_irl_addressing_snapper__hla_multiple_repo_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}, {"test_file": "test_prt_set_default_speedlimit_rx_cloud.py", "full_path": "rx_cloud_tests/PRT/test_prt_set_default_speedlimit_rx_cloud.py", "expected_tests": "3", "actual_tests": "0", "duration": "0"}]
#print(mapping_array)
create_csv_file_from_test_mapping(mapping_array, "131_staging_ReactorX-Cloud-Regression-master")
